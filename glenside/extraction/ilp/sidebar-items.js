initSidebarItems({"fn":[["create_generic_egraph_lp_model","From an egraph, create an LP model with a few useful base constraints"],["extract_single_expression","Returns an [`EGraph`] with just one enode per eclass, according to the results of the ILP problem. I could use a [`RecExpr`] here, but all of the post-processing we do (i.e. codegen) prefers to have an [`EGraph`] with our analysis attached. Also returns a map, mapping the [`Id`]s in the old egraph to their [`Id`]s in the new expression."],["filter_by_enode_type",""],["filter_obviously_less_preferable_nodes","Filtering function that drops enodes if this eclass contains obviously-extractable constructs."],["filter_useless_access_flattens","Filtering function which filters out nodes which form simple loops. Returns false if and only if this node is an access-flatten which is in an eclass by itself, and if the eclass it points to has an access-reshape node that points right back to this nodeâ€™s eclass."],["filter_useless_pad_slice_loops","Filtering function which filters out useless pad/slice loops"]],"struct":[["EGraphLpProblem","Thin wrapper over [`lp_modeler::LpProblem`]."]]});